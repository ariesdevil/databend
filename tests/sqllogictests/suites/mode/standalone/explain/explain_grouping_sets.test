query T
explain select number % 2 as a, number % 3 as b, number % 5 as c from numbers(1) group by rollup(a, b, c);
----
EvalScalar
├── output columns: [a (#5), b (#6), c (#7)]
├── expressions: [group_item (#1), group_item (#2), group_item (#3)]
├── estimated rows: 1.00
└── AggregateFinal
    ├── output columns: [a (#1), b (#2), c (#3), _grouping_id (#4)]
    ├── group by: [a (#1), b (#2), c (#3), _grouping_id (#4)]
    ├── aggregate functions: []
    ├── estimated rows: 1.00
    └── AggregatePartial
        ├── output columns: [#_group_by_key]
        ├── group by: [a (#1), b (#2), c (#3), _grouping_id (#4)]
        ├── aggregate functions: []
        ├── estimated rows: 1.00
        └── AggregateExpand
            ├── output columns: [a (#1), b (#2), c (#3), _grouping_id (#4)]
            ├── grouping sets: [(a (#1), b (#2), c (#3)), (a (#1), b (#2)), (a (#1)), ()]
            ├── estimated rows: 1.00
            └── EvalScalar
                ├── output columns: [a (#1), b (#2), c (#3)]
                ├── expressions: [numbers.number (#0) % 2, numbers.number (#0) % 3, numbers.number (#0) % 5]
                ├── estimated rows: 1.00
                └── TableScan
                    ├── table: default.system.numbers
                    ├── output columns: [number (#0)]
                    ├── read rows: 1
                    ├── read bytes: 8
                    ├── partitions total: 1
                    ├── partitions scanned: 1
                    ├── push downs: [filters: [], limit: NONE]
                    └── estimated rows: 1.00

query T
explain select number % 2 as a, number % 3 as b, number % 5 as c from numbers(1) group by cube(a, b, c);
----
EvalScalar
├── output columns: [a (#5), b (#6), c (#7)]
├── expressions: [group_item (#1), group_item (#2), group_item (#3)]
├── estimated rows: 1.00
└── AggregateFinal
    ├── output columns: [a (#1), b (#2), c (#3), _grouping_id (#4)]
    ├── group by: [a (#1), b (#2), c (#3), _grouping_id (#4)]
    ├── aggregate functions: []
    ├── estimated rows: 1.00
    └── AggregatePartial
        ├── output columns: [#_group_by_key]
        ├── group by: [a (#1), b (#2), c (#3), _grouping_id (#4)]
        ├── aggregate functions: []
        ├── estimated rows: 1.00
        └── AggregateExpand
            ├── output columns: [a (#1), b (#2), c (#3), _grouping_id (#4)]
            ├── grouping sets: [(), (a (#1)), (b (#2)), (c (#3)), (a (#1), b (#2)), (a (#1), c (#3)), (b (#2), c (#3)), (a (#1), b (#2), c (#3))]
            ├── estimated rows: 1.00
            └── EvalScalar
                ├── output columns: [a (#1), b (#2), c (#3)]
                ├── expressions: [numbers.number (#0) % 2, numbers.number (#0) % 3, numbers.number (#0) % 5]
                ├── estimated rows: 1.00
                └── TableScan
                    ├── table: default.system.numbers
                    ├── output columns: [number (#0)]
                    ├── read rows: 1
                    ├── read bytes: 8
                    ├── partitions total: 1
                    ├── partitions scanned: 1
                    ├── push downs: [filters: [], limit: NONE]
                    └── estimated rows: 1.00
